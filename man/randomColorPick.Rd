% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/randomColorPick.R
\name{randomColorPick}
\alias{randomColorPick}
\title{Constructing a ggplot-styled map of the Belgium, with colors for the different zones that are selected randomly}
\usage{
randomColorPick(
  plottingSpatialEffectCyclingOutputObject,
  predFactColors = NULL,
  printColourNames = FALSE,
  noSaving = FALSE
)
}
\arguments{
\item{plottingSpatialEffectCyclingOutputObject}{Output object of the 'plottingSpatialEffect' function (generated by toggling the 'randomPick' argument to TRUE). This is an obligatory argument, without default value.}

\item{predFactColors}{Character vector of length equal to the number of different values of the 'predictions' argument. Only if the 'predAsFact' argument is toggled to TRUE, this argument is taken into account. This is an optional argument, with NULL as default value.}

\item{printColourNames}{Logical vector of length 1 indicating whether or not one wants to print the name of the randomly selected color names. As such, one can learn the actual names of nice-looking colors. This is an optional argument, with FALSE as default value.}

\item{noSaving}{Logical vector of length 1 indicating whether or not one wants to save the produced ggplot object. The arguments 'plotTitle', 'plotDir', 'plotName' and 'pdf2', necessary to save the plot, are automatically supplied by the 'plottingSpatialEffectCyclingOutputObject' argument, such that any changes regarding these arguments need to be done by the 'plottingSpatialEffect' function. This is an optional argument, with FALSE as default value.}
}
\value{
A ggplot object is constructed with a different color for each zone (the predictions need to be a factor), each color being randomly selected.
}
\description{
Constructing a ggplot-styled map of the Belgium, with colors for the different zones that are selected randomly
}
\examples{
library(data.table)
dirShape <<- '/home/robin/shape/'
postalCode <- read.csv(paste(defaultdirectoryShapeFile, "postins.csv", sep = "\\\\"))[,c("CODPOSS","INS")]
inputDT <- data.table(postalCode = postalCode$CODPOSS, exposure = runif(nrow(postalCode)))
predictions <- as.numeric(as.character(postalCode$CODPOSS))
# If doesn't know which colour should be chosen, one can use the
# 'randomPick' argument and the 'randomColorPick' function.
inputCyclingFunction <- plottingSpatialEffect(inputDT, predictions, predAsFact = TRUE, randomPick = TRUE)
randomColorPick(inputCyclingFunction, , TRUE)
}
